-- ДЗ-5.2.1. Полная информация о студентах по :StudentId
-- ДЗ-5.2.2. Полная информация о студентах по :StudentName
-- ДЗ-6.6.2. Группы и предметы, такие что все студенты группы
-- сдали предмет
-- Логика такая же как и для индекса студента на StudentId,
-- так как GroupId также является primary key
create unique index on Groups using hash (GroupId);

-- ДЗ-7.1.2. Напишите запросы, удаляющие студентов из :GroupName
-- ДЗ-7.3.7. Число долгов каждого студента группы :GroupName
-- ДЗ-7.2.4. Перевод всех студентов из группы :FromGroupName
-- в группу :GroupName
-- Буду использовать покрывающий btree индекс на GroupName, GroupId
-- вместо hash только на GroupName,
-- так как по имени группы мы всегда хотим достать ее id.
-- Хочется отметить, что кол-во групп в университете будет
-- сравнительно небольшим и кажется, что скорость работы hash
-- будет не так выгодна по сравнению с тем,
-- что мы будем читать дополнительную страничку
-- используя hash, по-этому я выбрал btree.
create unique index on Groups using btree (GroupName, GroupId);