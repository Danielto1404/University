start: s
accept: ac
reject: rj
blank: _

s 0                     -> putInit* 0 <
s 1                     -> putInit* 1 <

putInit* _              -> putInit-one * <
putInit-one _           -> putInit$ 1 <
putInit$ _              -> putInit-zero $ <
putInit-zero _          -> put| 0 >

put| 0                  -> put| 0 >
put| 1                  -> put| 1 >
put| 0'                 -> put| 0 >
put| 1'                 -> put| 1 >
put| *                  -> put| * >
put| $                  -> put| $ >
put| _                  -> leftInitCopy | <

leftInitCopy |          -> leftInitCopy |       <
leftInitCopy 0          -> leftInitCopy 0       <
leftInitCopy 1          -> leftInitCopy 1       <
leftInitCopy *          -> transferRight *  >
leftInitCopy _          -> transferRight _  >
leftInitCopy 0'         -> transferRight 0' >
leftInitCopy 1'         -> transferRight 1' >

transferRight |         -> goEnd | >
transferRight 0         -> move-right-0 0' >
transferRight 1         -> move-right-1 1' >

goEnd 0                 -> goEnd 0 >
goEnd 1                 -> goEnd 1 >
goEnd _                 -> firstDecrement _ <

firstDecrement |        -> ac _ ^
firstDecrement 0        -> firstDecrement 1 <
firstDecrement 1        -> multiply 0 <

multiply 0              -> multiply 0 <
multiply 1              -> multiply 1 <
multiply 0'             -> multiply 0 <
multiply 1'             -> multiply 1 <
multiply |              -> multiply | <
multiply *              -> multiply * <
multiply _              -> putZero $ <
multiply $              -> goBackAndTransform $ >

putZero _               -> goBackAndTransform 0 >

move-right-0 0          -> move-right-0 0 >
move-right-0 1          -> move-right-0 1 >
move-right-0 |          -> move-right-0 | >
move-right-0 _          -> leftInitCopy 0 <

move-right-1 0          -> move-right-1 0 >
move-right-1 1          -> move-right-1 1 >
move-right-1 |          -> move-right-1 | >
move-right-1 _          -> leftInitCopy 1 <


subOne *                -> cleanLeft X <
subOne 0                -> subOne 1 <
subOne 1                -> goLeftThenSum 0 <


pick X                  -> pick X  >
pick |                  -> pick |  >
pick 0'                 -> pick 0' >
pick 1'                 -> pick 1' >
pick 0                  -> leftCopy 0 ^
pick 1                  -> leftCopy 1 ^
pick _                  -> goLeftTil| _ <

leftCopy 0              -> move-left-0 0' <
leftCopy 1              -> move-left-1 1' <

move-left-0 0'          -> move-left-0 0' <
move-left-0 1'          -> move-left-0 1' <
move-left-0 |           -> insertLeft-0 | <

insertLeft-0 X          -> insertLeft-0 X <
insertLeft-0 0          -> set-0 0 >
insertLeft-0 1          -> set-0 1 >
insertLeft-0 *          -> set-0 * >

set-0 X                 -> pick 0 >
set-0 |                 -> pick | >


move-left-1 0'          -> move-left-1 0' <
move-left-1 1'          -> move-left-1 1' <
move-left-1 |           -> insertLeft-1 | <

insertLeft-1 X          -> insertLeft-1 X <
insertLeft-1 0          -> set-1 0 >
insertLeft-1 1          -> set-1 1 >
insertLeft-1 *          -> set-1 * >

set-1 X                 -> pick 1 >
set-1 |                 -> pick | >

goLeftTil| 1'           -> goLeftTil| 1'     <
goLeftTil| 0'           -> goLeftTil| 0'     <
goLeftTil| |            -> transformAndDec | >

transformAndDec 0'      -> transformAndDec 0 >
transformAndDec 1'      -> transformAndDec 1 >
transformAndDec _       -> decrement _ <

decrement 0             -> decrement 1 <
decrement 1             -> goTil| 0 <
decrement |             -> clearOnes X >

clearOnes 1             -> clearOnes X >
clearOnes _             -> clearAllTil* _ <

clearAllTil* 0          -> clearAllTil* _ <
clearAllTil* 1          -> clearAllTil* _ <
clearAllTil* X          -> clearAllTil* _ <
clearAllTil* *          -> getAnswer _    <

getAnswer 0             -> getAnswer 0 <
getAnswer 1             -> getAnswer 1 <
getAnswer _             -> ac _ >

goTil| 0                -> goTil| 0 <
goTil| 1                -> goTil| 1 <
goTil| |                -> shiftLeft| X <

shiftLeft| X            -> shiftLeft| X <
shiftLeft| 0            -> set| 0 >
shiftLeft| 1            -> set| 1 >

set| X                  -> cp | >

cp X                    -> cp X >
cp 0                    -> move-zero X <
cp 1                    -> move-one X <
cp _                    -> cleanXs _ <

cleanXs X               -> cleanXs _ <
cleanXs 0               -> multiply 0 <
cleanXs 1               -> multiply 1 <

move-zero X             -> move-zero X <
move-zero |             -> set-zero | >
move-zero 0             -> set-zero 0 >
move-zero 1             -> set-zero 1 >

set-zero X              -> cp 0 >

move-one X              -> move-one X <
move-one |              -> set-one | >
move-one 0              -> set-one 0 >
move-one 1              -> set-one 1 >

set-one X               -> cp 1 >


goBackAndTransform |    -> subOne | <
goBackAndTransform *    -> goBackAndTransform * >
goBackAndTransform zero -> goBackAndTransform 0 >
goBackAndTransform one  -> goBackAndTransform 1 >
goBackAndTransform 0    -> goBackAndTransform 0 >
goBackAndTransform 1    -> goBackAndTransform 1 >
goBackAndTransform $    -> goBackAndTransform $ >

nextBitForSum *         -> sum *               <
nextBitForSum zero      -> sum zero            <
nextBitForSum one       -> sum one             <
nextBitForSum 0         -> nextBitForSum 0     >
nextBitForSum 1         -> nextBitForSum 1     >
nextBitForSum $         -> nextBitForSum $     >
nextBitForSum 0'        -> nextBitForSum 0'    >
nextBitForSum curry     -> nextBitForSum curry >
nextBitForSum 1'        -> nextBitForSum 1'    >

sum $                   -> getSumResult $    <
sum 0                   -> moveLeftZero zero <
sum 1                   -> moveLeftOne one   <

moveLeftZero 0          -> moveLeftZero 0 <
moveLeftZero 1          -> moveLeftZero 1 <
moveLeftZero $          -> plusZero $ <

moveLeftOne 0           -> moveLeftOne 0 <
moveLeftOne 1           -> moveLeftOne 1 <
moveLeftOne $           -> plusOne $ <

plusZero 0'             -> plusZero 0' <
plusZero 1'             -> plusZero 1' <
plusZero 0              -> nextBitForSum 0' >
plusZero 1              -> nextBitForSum 1' >
plusZero _              -> nextBitForSum 0' >
plusZero curry          -> nextBitForSum 1' >

curryPlusOne 1          -> curryPlusOne 0 <
curryPlusOne 0          -> nextBitForSum curry >
curryPlusOne _          -> nextBitForSum curry >

plusOne 0'              -> plusOne 0'  <
plusOne 1'              -> plusOne 1'  <
plusOne 1               -> curryPlusOne 0' <
plusOne curry           -> curryPlusOne 0' <
plusOne 0               -> nextBitForSum 1'  >
plusOne _               -> nextBitForSum 1'  >

getSumResult curry      -> getSumResult 1 <
getSumResult 0'         -> getSumResult 0 <
getSumResult 1'         -> getSumResult 1 <
getSumResult 0          -> getSumResult 0 <
getSumResult 1          -> getSumResult 1 <
getSumResult _          -> goBackAndTransform _ >

goLeftThenSum 0         -> goLeftThenSum 0 <
goLeftThenSum 1         -> goLeftThenSum 1 <
goLeftThenSum *         -> sum * <


cleanLeft 0             -> cleanLeft X   <
cleanLeft 1             -> cleanLeft X   <
cleanLeft $             -> cleanRight *  >

cleanRight X            -> cleanRight X >
cleanRight 1            -> cleanRight X >
cleanRight |            -> leftCopy | >